- name: "Setup Nucypher"
  hosts: "{{ play_hosts }}"
  remote_user: "{{default_user}}"
  gather_facts: no
  tasks:

    - name: Recursively change ownership of geth directory
      become: yes
      file:
        path: /home/nucypher/geth
        state: directory
        recurse: yes
        owner: nucypher

    - name: Stop any running Ursulas
      become: yes
      become_user: nucypher
      docker_container:
        name: ursula
        state: stopped
        image: "{{ nucypher_image | default('nucypher/nucypher:latest') }}"
      ignore_errors: yes

    - name: Keep disk space clean by pruning unneeded docker debris
      become: yes
      docker_prune:
        containers: yes
        images: yes
        images_filters:
          dangling: false
        networks: yes
        volumes: yes
        builder_cache: yes

    - name: "pull {{ nucypher_image | default('nucypher/nucypher:latest') }}"
      become: yes
      docker_image:
        name: "{{ nucypher_image | default('nucypher/nucypher:latest') }}"
        source: pull
        force_source: yes

    - name: "check if /home/nucypher/nucypher/ursula.json exists"
      become: yes
      become_user: nucypher
      stat:
        path: /home/nucypher/nucypher/ursula.json
      register: ursula_check

    - name: find keystore file
      find:
        paths: "{{geth_dir}}keystore"
      register: keystore_output

    - name: store signer options
      set_fact:
        signer_options: "--signer keystore://{{nucypher_container_geth_datadir}}/keystore/{{keystore_output.files[0].path | basename}}"
      when: node_is_decentralized is undefined or not node_is_decentralized and ursula_check.stat.exists == False

    - name: store empty signer options
      set_fact:
        signer_options: ""
      when: node_is_decentralized is not undefined and node_is_decentralized and ursula_check.stat.exists == False

    - name: Find my public ip
      uri:
        url: http://ifconfig.me/ip
        return_content: yes
      register: ip_response

    - name: "init Ursula operator"
      become: yes
      become_user: nucypher
      when: ursula_check.stat.exists == False
      command: "docker run -v /home/nucypher:/root/.local/share/ -e NUCYPHER_KEYSTORE_PASSWORD -it {{ nucypher_image | default('nucypher/nucypher:latest') }} nucypher ursula init --key-material {{keymaterial}} --provider {{ blockchain_provider }} --operator-address {{active_account.stdout}} --rest-host {{ip_response.content}} --network {{network_name}} {{nucypher_ursula_init_options | default('')}} {{signer_options}}"
      environment:
        NUCYPHER_KEYSTORE_PASSWORD: "{{runtime_envvars['NUCYPHER_KEYSTORE_PASSWORD']}}"
